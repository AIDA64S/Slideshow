plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id "com.github.johnrengelman.shadow" version "+"
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://api.modrinth.com/maven" }
}

loom {
    accessWidenerPath = file("src/main/resources/slide.accesswidener")
    mixin {
        setDefaultRefmapName("slide.refmap.json")
    }
}

configurations {
    shadowImplementation
    implementation.extendsFrom shadowImplementation
}

shadowJar {
    configurations = [project.configurations.shadowImplementation]
    relocate "org.apache.http.client.cache", "org.teacon.slides.http.client.cache"
    relocate "org.apache.http.impl.client.cache", "org.teacon.slides.http.impl.client.cache"
    relocate "com.luciad.imageio.webp", "org.teacon.slides.imageio.webp"
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modApi "com.terraformersmc:modmenu:${project.mod_menu_version}"

    shadowImplementation "org.apache.httpcomponents:httpclient-cache:4.5.14"
    shadowImplementation "org.sejda.imageio:webp-imageio:0.1.6"

    modLocalRuntime "maven.modrinth:sodium:dEpHs0Hg"
//    modLocalRuntime "maven.modrinth:iris:45ETshvT"

    compileOnly "com.github.spotbugs:spotbugs-annotations:4.8.5"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

remapJar {
    dependsOn(shadowJar)
    mustRunAfter(shadowJar)
    inputFile = file(shadowJar.archivePath)
}

tasks.register('moveFile') {
    copy {
        outputs.upToDateWhen { false }
        from "build/libs/Slideshow-1.0.3.jar"
        into "build/release/"
        rename "Slideshow-1.0.3.jar", "Slideshow-fabric-1.20.1-1.0.3.jar"
    }
}